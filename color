import cv2
import numpy as np

def get_color_name(h, s, v):
    if v < 75:
        return "Black"
    elif v > 190 and s < 27:
        return "White"
    elif s < 53 and v < 185:
        return "Gray"
    if h < 10:
        return "Red"
    elif h < 25:
        return "Orange"
    elif h < 35:
        return "Yellow"
    elif h < 85:
        return "Green"
    elif h < 125:
        return "Cyan"
    elif h < 165:
        return "Blue"
    elif h < 175:
        return "Purple"
    else:
        return "Red"

def main():
    # Open a connection to the webcam
    cap = cv2.VideoCapture(0)

    while True:
        # Read a frame from the webcam
        ret, frame = cap.read()

        # Check if the frame was captured successfully
        if not ret:
            break

        # Get the dimensions of the frame
        height, width, _ = frame.shape

        # Define the region of interest (center of the frame)
        roi_size = 50
        roi_x = width // 2 - roi_size // 2
        roi_y = height // 2 - roi_size // 2
        roi = frame[roi_y:roi_y+roi_size, roi_x:roi_x+roi_size]

        # Convert the region of interest to the HSV color space
        hsv_roi = cv2.cvtColor(roi, cv2.COLOR_BGR2HSV)

        # Calculate the average HSV values within the region of interest
        avg_hsv = cv2.mean(hsv_roi)[:3]
        h, s, v = avg_hsv

        # Get the color name
        color_name = get_color_name(h, s, v)

        # Draw a rectangle around the region of interest
        cv2.rectangle(frame, (roi_x, roi_y), (roi_x + roi_size, roi_y + roi_size), (255, 0, 0), 2)

        # Display the color name on the frame
        cv2.putText(frame, color_name, (roi_x, roi_y - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.9, (255, 255, 255), 2)

        # Display the frame
        cv2.imshow('Color Prediction', frame)

        # Exit the loop if the user presses the 'q' key
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

    # Release the webcam and close the window
    cap.release()
    cv2.destroyAllWindows()

if __name__ == "__main__":
    main()
